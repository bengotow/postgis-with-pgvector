# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Create and publish a Docker image

on:
  push:
    branches: ['master']
  pull_request:
    branches: ['master']

env:
  REGISTRY: ghcr.io
  TEST_TAG: ${{ github.repository }}:test
  LATEST_TAG: 15-3.3

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      pull-requests: read

    strategy:
      fail-fast: false
      matrix:
        postgres: [15]
        postgis: ['3.3']

    env:
      BASE_IMAGE_TAG: ${{ matrix.postgres }}-${{ matrix.postgis }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ github.repository }}
          tags: ${{ env.BASE_IMAGE_TAG }}

      - name: Build and export to Docker
        uses: docker/build-push-action@v4
        with:
          context: .
          load: true
          no-cache: true
          pull: true
          tags: ${{ env.TEST_TAG }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE_TAG=${{ env.BASE_IMAGE_TAG }}

      - name: Log in to container registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BASE_IMAGE_TAG=${{ env.BASE_IMAGE_TAG }}

      - name: Push latest tag to both registries
        if: ${{ (github.event_name != 'pull_request') && (env.BASE_IMAGE_TAG == env.LATEST_TAG) }}
        uses: akhilerm/tag-push-action@v2.1.0
        with:
          src: ${{ steps.meta.outputs.tags }}
          dst: |
            ${{ env.REGISTRY }}/${{ github.repository }}:latest
